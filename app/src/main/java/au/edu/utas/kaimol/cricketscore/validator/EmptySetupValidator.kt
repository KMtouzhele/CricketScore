package au.edu.utas.kaimol.cricketscore.validator

import androidx.viewbinding.ViewBinding
import au.edu.utas.kaimol.cricketscore.databinding.ActivityBattingTeamSetupBinding
import au.edu.utas.kaimol.cricketscore.databinding.ActivityBowlingTeamSetupBinding
import au.edu.utas.kaimol.cricketscore.databinding.PlayersInfoListItemBinding

class EmptySetupValidator {
    fun <T: ViewBinding> teamSetupValidation(viewBinding: T): Boolean {
        return when(true){
            isTeamNameEmpty(viewBinding) -> {
                true
            }

            isPlayerNameEmpty(viewBinding) -> {
                true
            }

            else -> false
        }
    }


    private fun <T: ViewBinding> isTeamNameEmpty(vb: T): Boolean {
        return when(vb){
            is ActivityBattingTeamSetupBinding
            -> isBattingTeamNameEmpty(vb)

            is ActivityBowlingTeamSetupBinding
            -> isBowlingTeamNameEmpty(vb)

            else -> false
        }
    }

    private fun <T: ViewBinding> isPlayerNameEmpty(vb: T): Boolean {
        return when(vb){
            is ActivityBattingTeamSetupBinding -> {
                isBattingPlayerNameEmpty(vb)
            }

            is ActivityBowlingTeamSetupBinding -> {
                isBowlingPlayerNameEmpty(vb)
            }

            else -> false
        }
    }

    //This function is generated by copilot.
    private fun isBattingPlayerNameEmpty(vb: ActivityBattingTeamSetupBinding): Boolean {
        for(i in 0 until vb.battersInfoList.childCount){
            val childView = vb.battersInfoList.getChildAt(i)
            val playerInfoBinding = PlayersInfoListItemBinding.bind(childView)
            val isPlayerNameEmpty = playerInfoBinding.txtPlayerName.text.isNullOrEmpty()
            if(isPlayerNameEmpty){
                return true
            }
        }
        return false
    }

    private fun isBowlingPlayerNameEmpty(vb: ActivityBowlingTeamSetupBinding): Boolean {
        for(i in 0 until vb.bowlersInfoList.childCount){
            val childView = vb.bowlersInfoList.getChildAt(i)
            val playerInfoBinding = PlayersInfoListItemBinding.bind(childView)
            val isPlayerNameEmpty = playerInfoBinding.txtPlayerName.text.isNullOrEmpty()
            if(isPlayerNameEmpty){
                return true
            }
        }
        return false
    }


    private fun isBattingTeamNameEmpty(viewBinding: ActivityBattingTeamSetupBinding): Boolean {
        return viewBinding.txtBattingTeamName.text.isNullOrEmpty()
    }

    private fun isBowlingTeamNameEmpty(viewBinding: ActivityBowlingTeamSetupBinding): Boolean {
        return viewBinding.txtBowlingTeamName.text.isNullOrEmpty()
    }
}